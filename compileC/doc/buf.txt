Prog                 :=      Expr
Expr                 :=      AddExpr
AddExpr              :=      MultiExpr
                     :=      AddExpr + MultiExpr
                     :=      AddExpr -  MultiExpr
MultiExpr            :=      PrimaryExpr
                     :=      MultiExpr * PrimaryExpr
                     :=      MultiExpr / PrimaryExpr
PrimaryExpr          :=      Num

-----------------------------------------
Prog                 :=      Expr
Expr                 :=      AddExpr
AddExpr              :=      MultiExpr
                     :=      AddExpr + MultiExpr
                     :=      AddExpr -  MultiExpr
MultiExpr            :=      PrimaryExpr
                     :=      MultiExpr * PrimaryExpr
                     :=      MultiExpr / PrimaryExpr
PrimaryExpr          :=      Num
                     :=      (Expr)

-----------------------------------------
Prog                 :=      Stmt*
Stmt                 :=      Expr;
Expr                 :=      AssignExpr
AssignExpr           :=      AddExpr
                     :=      AddExpr = AssignExpr
AddExpr              :=      MultiExpr
                     :=      AddExpr + MultiExpr
                     :=      AddExpr -  MultiExpr
MultiExpr            :=      PrimaryExpr
                     :=      MultiExpr * PrimaryExpr
                     :=      MultiExpr / PrimaryExpr
PrimaryExpr          :=      Num
                     :=      (Expr)
                     :=      Identifier

-----------------------------------------
Prog                 :=      Stmt*
Stmt                 :=      Expr;
                     :=      if "(" Expr ")" Stmt
                     :=      if "(" Expr ")" Stmt Else Stmt
                     :=      "{" Stmt* "}"
Expr                 :=      AssignExpr
AssignExpr           :=      EqualityExpr
                     :=      EqualityExpr = AssignExpr
EqualityExpr         :=      RelationalExpr
                     :=      EqualityExpr == RelationalExpr
                     :=      EqualityExpr != relationalExpr
RelationalExpr       :=      AddExpr
                     :=      RelationalExpr < AddExpr
                     :=      RelationalExpr > AddExpr
                     :=      RelationalExpr <= AddExpr
                     :=      RelationalExpr >= AddExpr
AddExpr              :=      MultiExpr
                     :=      AddExpr + MultiExpr
                     :=      AddExpr -  MultiExpr
MultiExpr            :=      PrimaryExpr
                     :=      MultiExpr * PrimaryExpr
                     :=      MultiExpr / PrimaryExpr
PrimaryExpr          :=      Num
                     :=      (Expr)
                     :=      Identifier
